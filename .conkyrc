conky.config = {

	--[[ In order to work, this script requires:
	1. font Font Awesome 5 Free Solid
	2. modprobe conf:
		sudo modprobe coretemp
		edit /etc/modules and add the line 'coretemp'
		sudo apt-get install lm-sensors
	3. weather script in ~/.scripts/conky_weather.bash
	4. prime-select --]]


-------------------------------------------------------------------------------
-- CONFIG

	use_xft = true,
	-- Force UTF8? Note that UTF8 support requires XFT
	override_utf8_locale = true,
	-- Good fonts: Lato, Latin Modern Sans, Ubuntu, DejaVu Sans
	font = 'DejaVu Sans:size=9',
	xftalpha = 0.98,
	text_buffer_size = 2048,
	update_interval = 2,
	total_run_times = 0,

	-- Use double buffering (reduces flicker, may not work for everyone)
	double_buffer = true,

	-- Conky window parameters
	alignment = 'top_right',
	gap_x = 50,
	gap_y = 35,
	minimum_height = 0,
	minimum_width = 530,
	maximum_width = 530,
	draw_shades = false,
	draw_outline = false,
	draw_borders = false,
	stippled_borders = 0,
	border_inner_margin = 20,
	border_width = 1,
	-- Colors from /usr/share/X11/rgb.txt
	-- Examples: burlywood[1|2|3|4], wheat[1|2|3|4], sandy brown, tan[1|2|3|4], orange [1|2|3], antiquewhite[1|2|3|4]
	color1 = 'tan3',
	default_color = 'antiquewhite3',

	own_window = true,
	own_window_type = 'normal',
	own_window_class = 'conky-semi',
	own_window_hints = 'undecorated,below,sticky,skip_taskbar,skip_pager',
	own_window_transparent = true,
	own_window_argb_visual = true,

	-- Subtract file system buffers from used memory?
	no_buffers = true,

	-- number of samples to average (1 to disable averaging)
	cpu_avg_samples = 4,
	net_avg_samples = 2,

	pad_percents = 3,
	short_units = true,

	default_bar_width = 200, default_bar_height = 8,

	lua_load = '~/.conky_bg.lua',
	lua_draw_hook_pre = 'draw_bg',


-------------------------------------------------------------------------------
-- TEMPLATES

	-- Font Awesome
	template0 = [[${if_match "\3" == "brands"}${font Font Awesome 5 Brands Regular:style=Regular:size=\2}\1${font}${else}${font Font Awesome 5 Free Solid:style=Solid:size=\2}\1${font}${endif}]],

	-- Section header
	template1 = [[${color1}${template0 \1 17 \3}${goto 70}${voffset -6}${font Lato:size=15}\2${font} ${hr 2}${color}${voffset 5}]],

	-- Section content indent
	template7 = [[${goto 70}]],

	-- Cpu core temperature for a given core number
	template2 = [[${execi 5 sensors | grep -i "core $(expr $((\1 - 1)) % \2):" | sed -En 's/^.*([0-9]{2}).*high.*$/\\1°C/p'}]],

	-- Cpu info for a given core
	template3 = [[${template 7}${template0  10} \1 ${goto 230}${freq_g \1} GHz ${alignr}${template2 \1 \2} ${cpubar cpu\1}]],

	-- Process by cpu
	template4 = [[${goto 350}${top name \1}${font DejaVu Sans Mono:size=9}${alignr}    ${top cpu \1}${font}]],

	-- Process by mem
	template5 = [[${goto 350}${top_mem name \1} ${font DejaVu Sans Mono:size=9}${alignr}${top_mem mem \1}${font}]],

	-- Network connection info
	template6 = [[${template 7}${template0 \2 10}${voffset -1} \1: ${addr \1}#
	${goto 350}${template0  10}${voffset -1} ${upspeed \1}${alignr}${template0  10}${voffset -1} ${downspeed \1}]],

	-- Disk space (unlike fs_bar, it does count superuser reserved space as used)
	-- Using this till exec behavior is fixed (exec are executed all the time, even inside conditionals like if_match).
	template8 = [[${execpi 60 if grep -qs '\1 ' /proc/mounts; then
		echo '${template 7}\1 ${goto 220} ${fs_size \1} ${alignr}${fs_free \1} free #
		${execibar 60 echo '$(df --output='pcent' \1 | tail -n 1 | grep -oE '\\w+')'}
		${goto 350}Read${goto 390}${diskiograph_read \2 20,50 -t}#
		${goto 460}Write${alignr}${diskiograph_write \2 20,50 -t}
		${voffset -20}${goto 350}${diskio_read \2}${goto 460}${diskio_write \2}${voffset 20}
		'
	fi}#
	]],

	-- Disk space (unlike fs_bar, it does count superuser reserved space as used)
	template9 = [[${template 7}\1 ${goto 230} ${fs_size \1} ${alignr}${fs_free \1} free ${execibar 60 df --output='pcent' \1 | tail -n 1 | grep -oE '\\w+'}
	${goto 350}Read${goto 390}${diskiograph_read \2 20,50 -t}#
	${goto 460}Write${alignr}${diskiograph_write \2 20,50 -t}
	${voffset -20}${goto 350}${diskio_read \2}${goto 460}${diskio_write \2}${voffset 20}#
]]

};


-------------------------------------------------------------------------------
conky.text = [=[
${template1  CPU}
${template 7}Physical#
${alignr}${execi 5 sensors | sed -En 's/Package.*([[:digit:]]{2}).*\(.*$/\1/p'}°C#
 ${cpubar 8 cpu0}
${template3 1 4}
${template3 2 4}
${template3 3 4}
${template3 4 4}
${if_match "${execi 5 hostname | cut -d- -f2}" == "laptop"}#
${template3 5 4}
${template3 6 4}
${template3 7 4}
${template3 8 4}
${endif}#
${if_match "${execi 5 hostname | cut -d- -f2}" == "fractal"}#
${template3 5 8}
${template3 6 8}
${template3 7 8}
${template3 8 8}
${endif}#
${template4 1}
${template4 2}
${template4 3}
${template4 4}


${template1  RAM}
${goto 230} ${memmax}${alignr}${memeasyfree} free ${membar 8}
${template5 1}
${template5 2}
${template5 3}
${template5 4}


${template1   SSD}
${template8 / /dev/nvme0n1p3}#
${template8 /boot /dev/nvme0n1p2}#
${template8 /media/data /dev/sda1}#
${template8 /media/data_ext /dev/sdb1}#
#

${if_match "${execi 600 prime-select query}"=="nvidia"}#
${template1   GPU}
${template 7}Nvidia driver: ${execi 600 nvidia-smi --format=csv,noheader,nounits --query-gpu=driver_version}#

	${template 7}GPU use (perf. level: ${nvidia perflevelcur}/${nvidia perflevelmax})${alignr}${nvidiabar gpuutil}
	${template 7}Mem use${alignr}${nvidiabar memutil}
	${template 7}Fan speed (${nvidia fanspeed} RPM)${alignr}${nvidia temp}°C ${nvidiabar fanlevel}



${endif}#
${template1  SYSTEM brands}
${template 7}${template0  12 brands}${voffset -2} ${execi 36000 lsb_release -rs} - ${kernel}#
${goto 350}${template0  10}${voffset -1}#
 ${execi 3600 apt list --upgradable 2>/dev/null | tail -n +2 | wc -l} updates#
${alignr}${template0  10}${voffset -1} ${uptime_short}${voffset 20}#

${if_match "${execi 60 hostname | cut -d- -f2}" == "laptop"}#
${template 7}${template0  12} ${battery BAT0}${alignr}${battery_time BAT0} ${battery_bar BAT0}#
${endif}

${if_up enp5s0}#
${template6 enp5s0 }
${endif}#
#
${if_up eno1}#
${template6 eno1 }
${endif}#
#
${if_up wlp2s0}#
${template6 wlp2s0 }
${goto 100}${wireless_essid wlp2s0} ${wireless_link_bar 8,50 wlp2s0}
${endif}#



${template1  WEATHER}
${font DejaVu Sans Mono:size=8}#
${execpi 3600 ~/.scripts/conky_weather.bash}
${font}

${alignr}${font DejaVu Sans:size=26}${time %H:%M}${font}
${alignr}${time %a %d %b %Y}#
]=];
