conky.config = {

-- In order to work, this scripts requires:
-- 1. font Font Awesome 5 Free Solid
-- 2. modprobe conf:
	-- sudo modprobe coretemp
	-- edit /etc/modules and add the line 'coretemp'
	-- sudo apt-get install lm-sensors
-- 3. weather script in ~/.scripts/conky_weather.bash

-------------------------------------------------------------------------------
-- CONFIG

	use_xft = true,
	-- Good fonts: Lato, Latin Modern Sans, Ubuntu, DejaVu Sans
	font = 'DejaVu Sans:size=9',
	xftalpha = 0.98,
	text_buffer_size = 2048,
	update_interval = 2,
	total_run_times = 0,

	-- Use double buffering (reduces flicker, may not work for everyone)
	double_buffer = true,

	-- Conky window parameters
	alignment = 'top_right',
	gap_x = 0,
	gap_y = 0,
	minimum_height = 0,
	minimum_width = 530,
	maximum_width = 530,
	draw_shades = false,
	draw_outline = false,
	draw_borders = false,
	stippled_borders = 0,
	border_inner_margin = 20,
	border_width = 1,
	default_color = 'lightgrey',
	own_window_colour = 'black',

	-- Create own window instead of using desktop (required in some file managers like nautilus)
	own_window = true,
	own_window_argb_visual = true,

	-- If own_window is yes, you may use type normal, desktop or override
	own_window_type = 'normal',

	-- Use pseudo transparency with own_window?
	own_window_transparent = true,

	-- Window color (if own_window_transparent is set to no)
	--own_window_colour 242520

	own_window_hints = 'undecorated,below,sticky,skip_taskbar,skip_pager',

	-- Subtract file system buffers from used memory?
	no_buffers = true,

	-- number of samples to average (1 to disable averaging)
	cpu_avg_samples = 4,
	net_avg_samples = 2,

	-- Force UTF8? note that UTF8 support required XFT
	override_utf8_locale = true,

	pad_percents = 3,
	short_units = true,

	default_bar_width = 200, default_bar_height = 8,

	lua_load = '~/.conky_bg.lua',
	lua_draw_hook_pre = 'draw_bg',


-------------------------------------------------------------------------------
-- TEMPLATES

	-- Font Awesome
	template0 = [[${font Font Awesome 5 Free Solid:style=Solid:size=\2}\1${font}]],

	-- Section header
	template1 = [[        ${template0 \1 17}${goto 100}${font DejaVu Sans:style=Bold:size=9}\2${font}#]],

	-- Cpu core temperature for a given core number
	template3 = [[${execi 5 sensors | grep -i "core $(expr $((\1 - 1)) % \2):" | sed -En 's/^.*([0-9]{2}).*high.*$/\\1°C/p'}]],

	-- Cpu info for a given core
	template4 = [[${alignr}${template0  10} \1: ${freq_g \1} GHz - ${template3 \1 \2} ${cpubar cpu\1}]],

	-- Process by cpu
	template5 = [[${goto 350}${top name \1}${font DejaVu Sans Mono:size=9}${alignr}    ${top cpu \1}${font}]],

	-- Process by mem
	template6 = [[${goto 350}${top_mem name \1} ${font DejaVu Sans Mono:size=9}${alignr}${top_mem mem \1}${font}]],

	-- Network connection info
	template7 = [[\1: ${addr \1}${goto 350}${template0  10} ${upspeed \1}${alignr}${template0  10} ${downspeed \1}]],

	-- Disk space (unlike fs_bar, it does count superuser reserved space as used)
	template9 = [[${goto 150}\1 - ${fs_size \1} ${alignr}${fs_free \1} free ${execibar 60 df --output='pcent' \1 | tail -n 1 | grep -oE '\\w+'}]]
};


-------------------------------------------------------------------------------
conky.text = [=[
RESSOURCES ${hr 2}

${template1  CPU}
${alignr}Physical:#
 ${execi 5 sensors | sed -En 's/Package.*([[:digit:]]{2}).*\(.*$/\1/p'}°C#
 ${cpubar 8 cpu0}
${template4 1 4}
${template4 2 4}
${template4 3 4}
${template4 4 4}
${if_match "${execi 5 hostname | cut -d- -f2}" == "laptop"}#
${template4 5 4}
${template4 6 4}
${template4 7 4}
${template4 8 4}
${endif}#
${if_match "${execi 5 hostname | cut -d- -f2}" == "fractal"}#
${template4 5 8}
${template4 6 8}
${template4 7 8}
${template4 8 8}
${endif}#
${template5 1}
${template5 2}
${template5 3}
${template5 4}


${template1  RAM}
${goto 150}Total: ${memmax}${alignr}${memeasyfree} free ${membar 8}
${template6 1}
${template6 2}
${template6 3}
${template6 4}


${template1   SSD}
${template9 /}
${template9 /boot}
${if_mounted /media/data}#
${template9 /media/data}
${endif}#
${if_mounted /media/data_ext}#
${template9 /media/data_ext}
${endif}#
#
${if_match "${execi 60 hostname | cut -d- -f2}" == "laptop"}

${template1  Bat.}
${goto 150}${battery BAT0}${alignr}${battery_time BAT0} ${battery_bar BAT0}#
${endif}



SYSTEM ${hr 2}

        ${font Font Awesome 5 Brands Regular:style=Regular:size=17}${font}${goto 100}${font DejaVu Sans:style=Bold:size=9}OS ${font}#
${goto 150}${execi 36000 lsb_release -rs} - ${font Font Awesome 5 Brands Regular:style=Regular:size=10}${font} ${kernel}#
${goto 350}${template0  10}#
 ${execi 3600 apt list --upgradable 2>/dev/null | tail -n +2 | wc -l} updates#
${alignr}${template0  10} ${uptime_short}${voffset 20}#

${template1   GPU}
${goto 150}Nvidia driver: ${execi 600 [ "$(prime-select query)" = "nvidia" ] && nvidia-settings -q  NvidiaDriverVersion | grep Version | sed 's/^.*:\ //' | head -n 1 || echo "nvidia GPU off"}#
${alignr}${template0  10} ${if_match "${execi 600 prime-select query}"=="nvidia"}${nvidia temp}°C${else}Nvidia GPU off${endif}



NETWORK ${hr 2}

${if_up enp5s0}#
${template1   }
${template7 enp5s0}
${endif}#
#
${if_up eno1}#
${template1   }
${template7 eno1}
${endif}#
#
${if_up wlp2s0}#
${template1   }
${template7 wlp2s0}
${goto 100}${wireless_essid wlp2s0} ${wireless_link_bar 8,80 wlp2s0}
${endif}#



WEATHER ${hr 2}

${font DejaVu Sans Mono:size=8}#
${execpi 3600 ~/.scripts/conky_weather.bash}
${font}

${alignr}${font DejaVu Sans:size=26}${time %H:%M}${font}
${alignr}${time %a %d %b %Y}#
]=];
