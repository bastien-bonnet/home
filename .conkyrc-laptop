conky.config = {
	use_xft = true,
	font = 'DejaVu Sans:size=8',
	xftalpha = 0.8,
	text_buffer_size = 2048,
	update_interval = 2,
	total_run_times = 0,

-- Use double buffering (reduces flicker, may not work for everyone)
	double_buffer = true,

-- Minimum size of text area
	minimum_width = 400,
	minimum_height = 0,
	maximum_width = 1500,

-- Draw shades?
	draw_shades = false,

-- Draw outlines?
	draw_outline = false,


-- BORDERS
-- Draw borders around text
	draw_borders = false,

-- Stippled borders?
	stippled_borders = 0,

-- border margins
	border_inner_margin = 35,

-- border width
	border_width = 1,

-- Default colors and also border colors
	default_color = 'lightgrey',
--own_window_colour white

-- Text alignment
	alignment = 'middle_right',

-- Gap between borders of screen and text
-- same thing as passing -x at command line
	gap_x = 80,
	gap_y = 0,

-- Subtract file system buffers from used memory?
	no_buffers = true,

-- number of cpu samples to average
-- set to 1 to disable averaging
	cpu_avg_samples = 2,

-- number of net samples to average
-- set to 1 to disable averaging
	net_avg_samples = 2,

-- Force UTF8? note that UTF8 support required XFT
	override_utf8_locale = true,

-- Add spaces to keep things from moving about?  This only affects certain objects.
	use_spacer = 'right',


-- WINDOW
-- Create own window instead of using desktop (required in some file managers like nautilus)
	own_window = true,
	own_window_argb_visual = true,

-- If own_window is yes, you may use type normal, desktop or override
	own_window_type = 'normal',

-- Use pseudo transparency with own_window?
	own_window_transparent = true,

-- Window color (if own_window_transparent is set to no)
--own_window_colour 242520

	own_window_hints = 'undecorated,below,sticky,skip_taskbar,skip_pager',

	default_bar_width = 40, default_bar_height = 15,

	lua_load = '~/.conky_bg.lua',
	lua_draw_hook_pre = 'draw_bg',

};

conky.text = [[
SYSTEM ${hr 2}
${font OpenLogos:size=24}u${font} 
${voffset -22}${alignr}kernel:  ${kernel}${voffset 10}
#
CPU: ${cpu cpu0}% ${alignr}${cpubar 5,130 cpu0}
# To make the following work, you need to do :
# sudo modprobe coretemp
# edit /etc/modules and add the line 'coretemp'
# sudo apt-get install lm-sensors
${alignr}${exec sensors | grep 0: | sed 's/.*\ \ +//' | sed 's/C\ *(.*$//'} - ${exec sensors | grep 1: | sed 's/.*\ \ +//' | sed 's/C\ *(.*$//'} - ${exec sensors | grep 2: | sed 's/.*\ \ +//' | sed 's/C\ *(.*$//'} - ${exec sensors | grep 3: | sed 's/.*\ \ +//' | sed 's/C\ *(.*$//'}

    1: ${cpu cpu1}% ${goto 130}${cpugraph cpu1 16,50 000000 ffffff} #
${cpugraph cpu5 16,50 000000 ffffff} ${alignr}5: ${cpu cpu5}%
    2: ${cpu cpu2}% ${goto 130}${cpugraph cpu2 16,50 000000 ffffff} #
${cpugraph cpu6 16,50 000000 ffffff} ${alignr}6: ${cpu cpu6}%
    3: ${cpu cpu3}% ${goto 130}${cpugraph cpu3 16,50 000000 ffffff} #
${cpugraph cpu7 16,50 000000 ffffff} ${alignr}7: ${cpu cpu7}%
    4: ${cpu cpu4}% ${goto 130}${cpugraph cpu4 16,50 000000 ffffff} #
${cpugraph cpu8 16,50 000000 ffffff} ${alignr}8: ${cpu cpu8}%

RAM: $memperc% ${alignr}${membar 10,130}
${alignr}${mem}/${memmax}
GPU: ${if_match "${exec prime-select query}"=="nvidia"}${nvidia temp}°C${else}nvidia GPU off${endif}
    GPU freq.: ${alignr}${if_match "${exec prime-select query}"=="nvidia"}${nvidia gpufreq} MHz${else}nvidia GPU off${endif}
    Mem freq.: ${alignr}${if_match "${exec prime-select query}"=="nvidia"}${nvidia memfreq} MHz${else}nvidia GPU off${endif}
    Driver version: ${alignr}${if_match "${exec prime-select query}"=="nvidia"}${exec nvidia-settings -q  NvidiaDriverVersion | grep Version | sed 's/^.*:\ //'}${else}nvidia GPU off${endif}

Battery: ${alignr}${battery BAT1}    ${voffset -5}${alignr}${battery_bar BAT1}
${voffset 10}${alignr}${battery_time BAT1}
HD ${hr 2}
    ${alignr}Trash: ${exec du -ch ~/.local/share/Trash/files/ | grep total | sed 's/\t.*//'}
    Root:${alignr}${fs_bar 4,140 /root}
${alignr}${fs_used /root}/${fs_size /root}

    Media:${alignr}${fs_bar 4,140 /media/DATA}
${alignr}${fs_used /media/DATA}/${fs_size /media/DATA}

NETWORK ${hr 2}
    eth4 : ${addr eth4}${goto 250}↑${upspeed eth4} ${alignr}↓${downspeed eth4}
    ${goto 250}${upspeedgraph eth4 15,80 000000 ffffff} ${alignr}${downspeedgraph eth4 15,80 000000 ffffff}

    wlan0 : ${addr wlan0}${goto 250}↑${upspeed wlan0} ${alignr}↓${downspeed wlan0}
    ${wireless_essid wlan0} ${wireless_link_bar 8,20 wlan0}${goto 250}${upspeedgraph wlan0 15,80 000000 ffffff} ${alignr}${downspeedgraph wlan0 15,80 000000 ffffff}

PROCESSES ${hr 2}
    CPU ${goto 290}mem${alignr}cpu
    ${color 88aadd}${top name 1} ${top pid 1}${goto 290}${top mem 1}${alignr}${top cpu 1}${color lightgrey}
    ${top name 2} ${top pid 2}${goto 290}${top mem 2} ${alignr}${top cpu 2}
    ${top name 3} ${top pid 3}${goto 290}${top mem 3} ${alignr}${top cpu 3}
    ${top name 4} ${top pid 4}${goto 290}${top mem 4} ${alignr}${top cpu 4}

    MEM
    ${color 88aadd}${top_mem name 1} ${top_mem pid 1}${goto 290}${top_mem mem 1} ${alignr}${top_mem cpu 1}${color lightgrey}
    ${top_mem name 2} ${top_mem pid 2}${goto 290}${top_mem mem 2} ${alignr}${top_mem cpu 2}
    ${top_mem name 3} ${top_mem pid 3}${goto 290}${top_mem mem 3} ${alignr}${top_mem cpu 3}
    ${top_mem name 4} ${top_mem pid 4}${goto 290}${top_mem mem 4} ${alignr}${top_mem cpu 4}#
]];
